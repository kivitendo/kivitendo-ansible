---
- name: Install Kivi dependencies
  hosts: all
  become: true

  vars_files:
    vars.yml

  handlers:
    - name: Enable SSL
      ansible.builtin.command: a2ensite default-ssl
      notify: Restart apache
      when: install_SSL

    - name: Restart apache
      ansible.builtin.service:
        name: apache2
        state: restarted

    - name: Start postgresql
      ansible.builtin.service:
        name: postgresql
        state: restarted

  tasks:

    - name: Update repos and install dependencies.
      ansible.builtin.apt:
        name:
          - apache2
          - git
          - libalgorithm-checkdigits-perl
          - libapache2-mod-fcgid
          - libarchive-zip-perl
          - libcam-pdf-perl
          - libcgi-pm-perl
          - libclone-perl
          - libconfig-std-perl
          - libcrypt-pbkdf2-perl
          - libdaemon-generic-perl
          - libdatetime-event-cron-perl
          - libdatetime-perl
          - libdatetime-set-perl
          - libdbd-pg-perl
          - libdbi-perl
          - libemail-address-perl
          - libemail-mime-perl
          - libexception-class-perl
          - libfcgi-perl
          - libfile-copy-recursive-perl
          - libfile-flock-perl
          - libfile-mimeinfo-perl
          - libfile-slurp-perl
          - libgd-gd2-perl
          - libhtml-restrict-perl
          - libimage-info-perl
          - libimager-perl
          - libimager-qrcode-perl
          - libipc-run-perl
          - libjson-perl
          - liblist-moreutils-perl
          - liblist-utilsby-perl
          - libmath-round-perl
          - libnet-smtp-ssl-perl
          - libnet-sslglue-perl
          - libparams-validate-perl
          - libpbkdf2-tiny-perl
          - libpdf-api2-perl
          - libregexp-ipv6-perl
          - librest-client-perl
          - librose-db-object-perl
          - librose-db-perl
          - librose-object-perl
          - libset-infinite-perl
          - libsort-naturally-perl
          - libstring-shellquote-perl
          - libtemplate-perl
          - libtext-csv-xs-perl
          - libtext-iconv-perl
          - libtext-unidecode-perl
          - libtry-tiny-perl
          - liburi-perl
          - libwww-perl
          - libxml-libxml-perl
          - libxml-writer-perl
          - libyaml-perl
          - poppler-utils
          - postgresql
          - postgresql-contrib
          - python3-passlib
          - texlive-full
          - libmail-imapclient-perl
          - libencode-imaputf7-perl
        state: present
        update_cache: true
          
  # install Kivi
    - name: Ensure git is installed.
      ansible.builtin.apt:
        name: git
        state: present

    - name: Clone repo.
      ansible.builtin.git:
        repo: 'https://github.com/kivitendo/kivitendo-erp.git'
        dest: /var/www/kivitendo-erp
        version: release-3.9.0

    - name: Copy over Kivitendo.conf.
      ansible.builtin.copy:
        src: config-files/kivitendo.conf
        dest: /var/www/kivitendo-erp/config/kivitendo.conf
        mode: "0664"
      notify: Restart apache

    - name: Make webdav directory.
      ansible.builtin.file:
        path: /var/www/kivitendo-erp/webdav
        state: directory
        mode: "0775"

    - name: Change permissions.
      ansible.builtin.file:
        owner: www-data
        path: "/var/www/kivitendo-erp/{{ item }}"
        mode: "0775"
      loop:
        - users
        - spool
        - webdav

  #  postrgesql for kivi
    - name: Allow acces from localhost to Postgresql.
      ansible.builtin.postgresql_pg_hba:
        contype: host
        users: all
        databases: all
        address: 127.0.0.1
        method: trust
        dest: /etc/postgresql/15/main/pg_hba.conf

  # apache server for kivi
    - name: Activate apache fastcgi and headers modules.
      community.general.apache2_module:
        state: present
        name: "{{ item }}"
      loop:
        - fcgid
        - headers
      notify: Restart apache
      when: not install_SSL

    - name: Activate apache fastcgi, headers and ssl modules.
      community.general.apache2_module:
        state: present
        name: "{{ item }}"
      loop:
        - fcgid
        - headers
        - ssl
      notify: Enable SSL
      when: install_SSL

    - name: Add a user to a password file suitable for use by libpam-pwdfile
      community.general.htpasswd:
        path: /etc/apache2/.htpasswd
        name: "{{ basic_auth.user }}"
        password: "{{ basic_auth.password }}"
      when: basic_auth

    - name: Copy over apache config files.
      ansible.builtin.template:
        src: config-files/apache/no-ssl/000-default.conf
        dest: /etc/apache2/sites-available/000-default.conf
        mode: '640'
      notify: Restart apache
      when: not install_SSL

    - name: Copy over apache config files.
      ansible.builtin.template:
        src: "config-files/apache/ssl/{{ item }}"
        dest: "/etc/apache2/sites-available/{{ item }}"
        mode: '640'
      loop:
        - default-ssl.conf
      notify: Restart apache
      when: install_SSL
    
    - name: Disable 000-default.conf
      shell: a2dissite 000-default.conf
      when: install_SSL 

# vim: set ft=yaml.ansible
